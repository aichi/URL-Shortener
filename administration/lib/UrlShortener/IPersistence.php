<?php
namespace UrlShortener;

/**
 * Interface IPersistence must be fulfilled by class which is defined in configuration file as
 * persistence manager.
 * @package UrlShortener
 */
interface IPersistence {
	/**
	 * Constructor, which should be empty, all necessary parameters are passed to init method.
	 */
	public function __construct();

	/**
	 * Delayed constructor called after configuration values are parsed.
	 * @param array $init Associative array with config key 'connection'
	 * @return bool False if e.g. database connection cannot be established.
	 */
	public function init($init);

	/**
	 * Method returns all stored shortened URLs.
	 * @return array Array of associative arrays with keys 'hash', 'shortenHash' and 'url'
	 */
	public function getUrlList();

	/**
	 * Method checks if given hash is unique.
	 * @param string $hash
	 * @return bool True when hash is unique.
	 */
	public function checkUniqueHash($hash);

	/**
	 * Method saves URL to storage.
	 * @param string $url Original URL
	 * @param string $shortenerHash Hash from external shortening service
	 * @param string $hash Local hash, should be ommited, than have to be generated by ancestor class
	 * @return array|bool Associative array with keys 'url' and 'hash' or false.
	 */
	public function saveUrl($url, $shortenerHash, $hash);

	/**
	 * Method deletes URL by given hash from storage.
	 * @param string $hash Local hash
	 * @return bool Result of deletion
	 */
	public function deleteLink($hash);

	/**
	 * Method returns URL by given hash.
	 * @param string $hash Local hash.
	 * @return array|bool Associative array with keys 'url', 'hash' and 'shortenerHash' or false when error.
	 */
	public function getUrlByHash($hash);

	/**
	 * Method returns URL by shortener hash.
	 * @param string $shortenerHash Remote shortener hash.
	 * @return array|bool Associative array with keys 'url' and 'hash' or false when error.
	 */
	public function getUrlByShortenerHash($shortenerHash);
}